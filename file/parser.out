Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EQUALS
    FOR
    ID
    LBRACKET
    NAME
    RBRACKET
    THEN

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS term
Rule 2     expression -> expression MINUS term
Rule 3     expression -> expression MINUS expression
Rule 4     expression -> MINUS expression
Rule 5     term -> term TIMES factor
Rule 6     term -> term DIVIDE factor
Rule 7     expression -> term
Rule 8     term -> factor
Rule 9     factor -> NUMBER
Rule 10    factor -> LPAREN expression RPAREN
Rule 11    factor -> LESS expression MORE
Rule 12    term -> term SQUARE factor
Rule 13    term -> term ROOT factor
Rule 14    statement -> expression
Rule 15    if_statement -> IF LPAREN expression RPAREN SPACE statement
Rule 16    if_statement -> IF LPAREN expression RPAREN statement
Rule 17    if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
Rule 18    if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement
Rule 19    term -> if_statement
Rule 20    end -> SEMICOLON

Terminals, with rules where they appear

DIVIDE               : 6
ELSE                 : 17 18
EQUALS               : 
FOR                  : 
ID                   : 
IF                   : 15 16 17 18
LBRACKET             : 
LESS                 : 11
LPAREN               : 10 15 16 17 18
MINUS                : 2 3 4
MORE                 : 11
NAME                 : 
NUMBER               : 9
PLUS                 : 1
RBRACKET             : 
ROOT                 : 13
RPAREN               : 10 15 16 17 18
SEMICOLON            : 20
SPACE                : 15 17 17 18 18 18
SQUARE               : 12
THEN                 : 
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

end                  : 
expression           : 1 2 3 3 4 10 11 14 15 16 17 18 0
factor               : 5 6 8 12 13
if_statement         : 19
statement            : 15 16 17 17 18 18
term                 : 1 2 5 6 7 12 13

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term
    (3) expression -> expression . MINUS expression

    PLUS            shift and go to state 10
    MINUS           shift and go to state 11


state 2

    (7) expression -> term .
    (5) term -> term . TIMES factor
    (6) term -> term . DIVIDE factor
    (12) term -> term . SQUARE factor
    (13) term -> term . ROOT factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
    PLUS            reduce using rule 7 (expression -> term .)
    MINUS           reduce using rule 7 (expression -> term .)
    $end            reduce using rule 7 (expression -> term .)
    RPAREN          reduce using rule 7 (expression -> term .)
    MORE            reduce using rule 7 (expression -> term .)
    SPACE           reduce using rule 7 (expression -> term .)
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13
    SQUARE          shift and go to state 14
    ROOT            shift and go to state 15

  ! TIMES           [ reduce using rule 7 (expression -> term .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> term .) ]
  ! SQUARE          [ reduce using rule 7 (expression -> term .) ]
  ! ROOT            [ reduce using rule 7 (expression -> term .) ]


state 3

    (4) expression -> MINUS . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 16
    term                           shift and go to state 2
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 4

    (8) term -> factor .

    TIMES           reduce using rule 8 (term -> factor .)
    DIVIDE          reduce using rule 8 (term -> factor .)
    SQUARE          reduce using rule 8 (term -> factor .)
    ROOT            reduce using rule 8 (term -> factor .)
    PLUS            reduce using rule 8 (term -> factor .)
    MINUS           reduce using rule 8 (term -> factor .)
    $end            reduce using rule 8 (term -> factor .)
    RPAREN          reduce using rule 8 (term -> factor .)
    MORE            reduce using rule 8 (term -> factor .)
    SPACE           reduce using rule 8 (term -> factor .)


state 5

    (19) term -> if_statement .

    TIMES           reduce using rule 19 (term -> if_statement .)
    DIVIDE          reduce using rule 19 (term -> if_statement .)
    SQUARE          reduce using rule 19 (term -> if_statement .)
    ROOT            reduce using rule 19 (term -> if_statement .)
    PLUS            reduce using rule 19 (term -> if_statement .)
    MINUS           reduce using rule 19 (term -> if_statement .)
    $end            reduce using rule 19 (term -> if_statement .)
    RPAREN          reduce using rule 19 (term -> if_statement .)
    MORE            reduce using rule 19 (term -> if_statement .)
    SPACE           reduce using rule 19 (term -> if_statement .)


state 6

    (9) factor -> NUMBER .

    TIMES           reduce using rule 9 (factor -> NUMBER .)
    DIVIDE          reduce using rule 9 (factor -> NUMBER .)
    SQUARE          reduce using rule 9 (factor -> NUMBER .)
    ROOT            reduce using rule 9 (factor -> NUMBER .)
    PLUS            reduce using rule 9 (factor -> NUMBER .)
    MINUS           reduce using rule 9 (factor -> NUMBER .)
    $end            reduce using rule 9 (factor -> NUMBER .)
    RPAREN          reduce using rule 9 (factor -> NUMBER .)
    MORE            reduce using rule 9 (factor -> NUMBER .)
    SPACE           reduce using rule 9 (factor -> NUMBER .)


state 7

    (10) factor -> LPAREN . expression RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 17
    term                           shift and go to state 2
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 8

    (11) factor -> LESS . expression MORE
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 18
    term                           shift and go to state 2
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 9

    (15) if_statement -> IF . LPAREN expression RPAREN SPACE statement
    (16) if_statement -> IF . LPAREN expression RPAREN statement
    (17) if_statement -> IF . LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> IF . LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    LPAREN          shift and go to state 19


state 10

    (1) expression -> expression PLUS . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    term                           shift and go to state 20
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 11

    (2) expression -> expression MINUS . term
    (3) expression -> expression MINUS . expression
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 21
    term                           shift and go to state 22
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 12

    (5) term -> term TIMES . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE

    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8

    factor                         shift and go to state 23

state 13

    (6) term -> term DIVIDE . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE

    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8

    factor                         shift and go to state 24

state 14

    (12) term -> term SQUARE . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE

    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8

    factor                         shift and go to state 25

state 15

    (13) term -> term ROOT . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE

    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8

    factor                         shift and go to state 26

state 16

    (4) expression -> MINUS expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term
    (3) expression -> expression . MINUS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 4 (expression -> MINUS expression .)
    RPAREN          reduce using rule 4 (expression -> MINUS expression .)
    MORE            reduce using rule 4 (expression -> MINUS expression .)
    SPACE           reduce using rule 4 (expression -> MINUS expression .)
    TIMES           reduce using rule 4 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 4 (expression -> MINUS expression .)
    SQUARE          reduce using rule 4 (expression -> MINUS expression .)
    ROOT            reduce using rule 4 (expression -> MINUS expression .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11

  ! PLUS            [ reduce using rule 4 (expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> MINUS expression .) ]


state 17

    (10) factor -> LPAREN expression . RPAREN
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term
    (3) expression -> expression . MINUS expression

    RPAREN          shift and go to state 27
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11


state 18

    (11) factor -> LESS expression . MORE
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term
    (3) expression -> expression . MINUS expression

    MORE            shift and go to state 28
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11


state 19

    (15) if_statement -> IF LPAREN . expression RPAREN SPACE statement
    (16) if_statement -> IF LPAREN . expression RPAREN statement
    (17) if_statement -> IF LPAREN . expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> IF LPAREN . expression RPAREN SPACE statement SPACE ELSE SPACE statement
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 29
    term                           shift and go to state 2
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 20

    (1) expression -> expression PLUS term .
    (5) term -> term . TIMES factor
    (6) term -> term . DIVIDE factor
    (12) term -> term . SQUARE factor
    (13) term -> term . ROOT factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
    PLUS            reduce using rule 1 (expression -> expression PLUS term .)
    MINUS           reduce using rule 1 (expression -> expression PLUS term .)
    $end            reduce using rule 1 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 1 (expression -> expression PLUS term .)
    MORE            reduce using rule 1 (expression -> expression PLUS term .)
    SPACE           reduce using rule 1 (expression -> expression PLUS term .)
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13
    SQUARE          shift and go to state 14
    ROOT            shift and go to state 15

  ! TIMES           [ reduce using rule 1 (expression -> expression PLUS term .) ]
  ! DIVIDE          [ reduce using rule 1 (expression -> expression PLUS term .) ]
  ! SQUARE          [ reduce using rule 1 (expression -> expression PLUS term .) ]
  ! ROOT            [ reduce using rule 1 (expression -> expression PLUS term .) ]


state 21

    (3) expression -> expression MINUS expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term
    (3) expression -> expression . MINUS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 3 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression MINUS expression .)
    MORE            reduce using rule 3 (expression -> expression MINUS expression .)
    SPACE           reduce using rule 3 (expression -> expression MINUS expression .)
    TIMES           reduce using rule 3 (expression -> expression MINUS expression .)
    DIVIDE          reduce using rule 3 (expression -> expression MINUS expression .)
    SQUARE          reduce using rule 3 (expression -> expression MINUS expression .)
    ROOT            reduce using rule 3 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11

  ! PLUS            [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 3 (expression -> expression MINUS expression .) ]


state 22

    (2) expression -> expression MINUS term .
    (5) term -> term . TIMES factor
    (6) term -> term . DIVIDE factor
    (12) term -> term . SQUARE factor
    (13) term -> term . ROOT factor
    (7) expression -> term .

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 2 (expression -> expression MINUS term .)
  ! reduce/reduce conflict for MINUS resolved using rule 2 (expression -> expression MINUS term .)
  ! reduce/reduce conflict for $end resolved using rule 2 (expression -> expression MINUS term .)
  ! reduce/reduce conflict for RPAREN resolved using rule 2 (expression -> expression MINUS term .)
  ! reduce/reduce conflict for MORE resolved using rule 2 (expression -> expression MINUS term .)
  ! reduce/reduce conflict for SPACE resolved using rule 2 (expression -> expression MINUS term .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for SQUARE resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
    PLUS            reduce using rule 2 (expression -> expression MINUS term .)
    MINUS           reduce using rule 2 (expression -> expression MINUS term .)
    $end            reduce using rule 2 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS term .)
    MORE            reduce using rule 2 (expression -> expression MINUS term .)
    SPACE           reduce using rule 2 (expression -> expression MINUS term .)
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13
    SQUARE          shift and go to state 14
    ROOT            shift and go to state 15

  ! TIMES           [ reduce using rule 2 (expression -> expression MINUS term .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> expression MINUS term .) ]
  ! SQUARE          [ reduce using rule 2 (expression -> expression MINUS term .) ]
  ! ROOT            [ reduce using rule 2 (expression -> expression MINUS term .) ]
  ! PLUS            [ reduce using rule 7 (expression -> term .) ]
  ! MINUS           [ reduce using rule 7 (expression -> term .) ]
  ! $end            [ reduce using rule 7 (expression -> term .) ]
  ! RPAREN          [ reduce using rule 7 (expression -> term .) ]
  ! MORE            [ reduce using rule 7 (expression -> term .) ]
  ! SPACE           [ reduce using rule 7 (expression -> term .) ]
  ! TIMES           [ reduce using rule 7 (expression -> term .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> term .) ]
  ! SQUARE          [ reduce using rule 7 (expression -> term .) ]
  ! ROOT            [ reduce using rule 7 (expression -> term .) ]


state 23

    (5) term -> term TIMES factor .

    TIMES           reduce using rule 5 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 5 (term -> term TIMES factor .)
    SQUARE          reduce using rule 5 (term -> term TIMES factor .)
    ROOT            reduce using rule 5 (term -> term TIMES factor .)
    PLUS            reduce using rule 5 (term -> term TIMES factor .)
    MINUS           reduce using rule 5 (term -> term TIMES factor .)
    $end            reduce using rule 5 (term -> term TIMES factor .)
    RPAREN          reduce using rule 5 (term -> term TIMES factor .)
    MORE            reduce using rule 5 (term -> term TIMES factor .)
    SPACE           reduce using rule 5 (term -> term TIMES factor .)


state 24

    (6) term -> term DIVIDE factor .

    TIMES           reduce using rule 6 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 6 (term -> term DIVIDE factor .)
    SQUARE          reduce using rule 6 (term -> term DIVIDE factor .)
    ROOT            reduce using rule 6 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 6 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 6 (term -> term DIVIDE factor .)
    $end            reduce using rule 6 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 6 (term -> term DIVIDE factor .)
    MORE            reduce using rule 6 (term -> term DIVIDE factor .)
    SPACE           reduce using rule 6 (term -> term DIVIDE factor .)


state 25

    (12) term -> term SQUARE factor .

    TIMES           reduce using rule 12 (term -> term SQUARE factor .)
    DIVIDE          reduce using rule 12 (term -> term SQUARE factor .)
    SQUARE          reduce using rule 12 (term -> term SQUARE factor .)
    ROOT            reduce using rule 12 (term -> term SQUARE factor .)
    PLUS            reduce using rule 12 (term -> term SQUARE factor .)
    MINUS           reduce using rule 12 (term -> term SQUARE factor .)
    $end            reduce using rule 12 (term -> term SQUARE factor .)
    RPAREN          reduce using rule 12 (term -> term SQUARE factor .)
    MORE            reduce using rule 12 (term -> term SQUARE factor .)
    SPACE           reduce using rule 12 (term -> term SQUARE factor .)


state 26

    (13) term -> term ROOT factor .

    TIMES           reduce using rule 13 (term -> term ROOT factor .)
    DIVIDE          reduce using rule 13 (term -> term ROOT factor .)
    SQUARE          reduce using rule 13 (term -> term ROOT factor .)
    ROOT            reduce using rule 13 (term -> term ROOT factor .)
    PLUS            reduce using rule 13 (term -> term ROOT factor .)
    MINUS           reduce using rule 13 (term -> term ROOT factor .)
    $end            reduce using rule 13 (term -> term ROOT factor .)
    RPAREN          reduce using rule 13 (term -> term ROOT factor .)
    MORE            reduce using rule 13 (term -> term ROOT factor .)
    SPACE           reduce using rule 13 (term -> term ROOT factor .)


state 27

    (10) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    SQUARE          reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    ROOT            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    MORE            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    SPACE           reduce using rule 10 (factor -> LPAREN expression RPAREN .)


state 28

    (11) factor -> LESS expression MORE .

    TIMES           reduce using rule 11 (factor -> LESS expression MORE .)
    DIVIDE          reduce using rule 11 (factor -> LESS expression MORE .)
    SQUARE          reduce using rule 11 (factor -> LESS expression MORE .)
    ROOT            reduce using rule 11 (factor -> LESS expression MORE .)
    PLUS            reduce using rule 11 (factor -> LESS expression MORE .)
    MINUS           reduce using rule 11 (factor -> LESS expression MORE .)
    $end            reduce using rule 11 (factor -> LESS expression MORE .)
    RPAREN          reduce using rule 11 (factor -> LESS expression MORE .)
    MORE            reduce using rule 11 (factor -> LESS expression MORE .)
    SPACE           reduce using rule 11 (factor -> LESS expression MORE .)


state 29

    (15) if_statement -> IF LPAREN expression . RPAREN SPACE statement
    (16) if_statement -> IF LPAREN expression . RPAREN statement
    (17) if_statement -> IF LPAREN expression . RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> IF LPAREN expression . RPAREN SPACE statement SPACE ELSE SPACE statement
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term
    (3) expression -> expression . MINUS expression

    RPAREN          shift and go to state 30
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11


state 30

    (15) if_statement -> IF LPAREN expression RPAREN . SPACE statement
    (16) if_statement -> IF LPAREN expression RPAREN . statement
    (17) if_statement -> IF LPAREN expression RPAREN . statement SPACE ELSE SPACE statement
    (18) if_statement -> IF LPAREN expression RPAREN . SPACE statement SPACE ELSE SPACE statement
    (14) statement -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    SPACE           shift and go to state 32
    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 31
    statement                      shift and go to state 33
    term                           shift and go to state 2
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 31

    (14) statement -> expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term
    (3) expression -> expression . MINUS expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 14 (statement -> expression .)
    RPAREN          reduce using rule 14 (statement -> expression .)
    MORE            reduce using rule 14 (statement -> expression .)
    SPACE           reduce using rule 14 (statement -> expression .)
    TIMES           reduce using rule 14 (statement -> expression .)
    DIVIDE          reduce using rule 14 (statement -> expression .)
    SQUARE          reduce using rule 14 (statement -> expression .)
    ROOT            reduce using rule 14 (statement -> expression .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11

  ! PLUS            [ reduce using rule 14 (statement -> expression .) ]
  ! MINUS           [ reduce using rule 14 (statement -> expression .) ]


state 32

    (15) if_statement -> IF LPAREN expression RPAREN SPACE . statement
    (18) if_statement -> IF LPAREN expression RPAREN SPACE . statement SPACE ELSE SPACE statement
    (14) statement -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 31
    statement                      shift and go to state 34
    term                           shift and go to state 2
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 33

    (16) if_statement -> IF LPAREN expression RPAREN statement .
    (17) if_statement -> IF LPAREN expression RPAREN statement . SPACE ELSE SPACE statement

  ! shift/reduce conflict for SPACE resolved as shift
    TIMES           reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .)
    DIVIDE          reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .)
    SQUARE          reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .)
    ROOT            reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .)
    RPAREN          reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .)
    MORE            reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .)
    SPACE           shift and go to state 35

  ! SPACE           [ reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN statement .) ]


state 34

    (15) if_statement -> IF LPAREN expression RPAREN SPACE statement .
    (18) if_statement -> IF LPAREN expression RPAREN SPACE statement . SPACE ELSE SPACE statement

  ! shift/reduce conflict for SPACE resolved as shift
    TIMES           reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .)
    DIVIDE          reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .)
    SQUARE          reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .)
    ROOT            reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .)
    PLUS            reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .)
    MINUS           reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .)
    $end            reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .)
    RPAREN          reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .)
    MORE            reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .)
    SPACE           shift and go to state 36

  ! SPACE           [ reduce using rule 15 (if_statement -> IF LPAREN expression RPAREN SPACE statement .) ]


state 35

    (17) if_statement -> IF LPAREN expression RPAREN statement SPACE . ELSE SPACE statement

    ELSE            shift and go to state 37


state 36

    (18) if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE . ELSE SPACE statement

    ELSE            shift and go to state 38


state 37

    (17) if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE . SPACE statement

    SPACE           shift and go to state 39


state 38

    (18) if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE . SPACE statement

    SPACE           shift and go to state 40


state 39

    (17) if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE . statement
    (14) statement -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 31
    statement                      shift and go to state 41
    term                           shift and go to state 2
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 40

    (18) if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE . statement
    (14) statement -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . expression MINUS expression
    (4) expression -> . MINUS expression
    (7) expression -> . term
    (5) term -> . term TIMES factor
    (6) term -> . term DIVIDE factor
    (8) term -> . factor
    (12) term -> . term SQUARE factor
    (13) term -> . term ROOT factor
    (19) term -> . if_statement
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . LESS expression MORE
    (15) if_statement -> . IF LPAREN expression RPAREN SPACE statement
    (16) if_statement -> . IF LPAREN expression RPAREN statement
    (17) if_statement -> . IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement
    (18) if_statement -> . IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement

    MINUS           shift and go to state 3
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7
    LESS            shift and go to state 8
    IF              shift and go to state 9

    expression                     shift and go to state 31
    statement                      shift and go to state 42
    term                           shift and go to state 2
    factor                         shift and go to state 4
    if_statement                   shift and go to state 5

state 41

    (17) if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .

    TIMES           reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)
    DIVIDE          reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)
    SQUARE          reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)
    ROOT            reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)
    PLUS            reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)
    MINUS           reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)
    $end            reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)
    RPAREN          reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)
    MORE            reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)
    SPACE           reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN statement SPACE ELSE SPACE statement .)


state 42

    (18) if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .

    TIMES           reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)
    DIVIDE          reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)
    SQUARE          reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)
    ROOT            reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)
    PLUS            reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)
    MINUS           reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)
    $end            reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)
    RPAREN          reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)
    MORE            reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)
    SPACE           reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN SPACE statement SPACE ELSE SPACE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 2 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 2 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 2 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 2 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 20 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 20 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 20 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 20 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 21 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 21 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 22 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 22 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 22 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 22 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 22 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 22 resolved as shift
WARNING: shift/reduce conflict for SQUARE in state 22 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 22 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for SPACE in state 33 resolved as shift
WARNING: shift/reduce conflict for SPACE in state 34 resolved as shift
WARNING: reduce/reduce conflict in state 22 resolved using rule (expression -> expression MINUS term)
WARNING: rejected rule (expression -> term) in state 22
